module ACE11

using LibSerialPort

BAUDRATE = 9600

COMMANDS =
    [
        # control instructions
        "pause"       => [[0x56, 0xff, 0xff, 0x00, 0x07, 0xf1, 0x02]],
        "play"        => [[0x56, 0xff, 0xff, 0x00, 0x07, 0xf1, 0x01]],
        "reset"       => [[0x56, 0xff, 0xff, 0x00, 0x07, 0xf1, 0x06]],
        "step_into"   => [[0x56, 0xff, 0xff, 0x00, 0x07, 0xf1, 0x03]],
        "step_out"    => [[0x56, 0xff, 0xff, 0x00, 0x07, 0xf1, 0x04]],
        "step_over"   => [[0x56, 0xff, 0xff, 0x00, 0x07, 0xf1, 0x05]],
        "enter_debug" => [[0x56, 0xff, 0xff, 0x00, 0x07, 0xf0, 0x02]],
        "exit_debug"  => [[0x56, 0xff, 0xff, 0x00, 0x07, 0xf0, 0x01]],

        # set instructions
        "set_output_1_off" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
        ]],
        "set_output_1_on" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x01,
        ]],
        "set_output_2_off" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00,
        ]],
        "set_output_2_on" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x01,
        ]],
        "set_output_3_off" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00,
        ]],
        "set_output_3_on" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x01,
        ]],
        "set_output_4_off" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00,
        ]],
        "set_output_4_on" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x01,
        ]],
        "set_output_5_off" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00,
        ]],
        "set_output_5_on" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x01,
        ]],
        "set_output_6_off" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00,
        ]],
        "set_output_6_on" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x01,
        ]],
        "set_output_all_on" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x3f, 0x00, 0x00, 0x01,
        ]],
        "set_output_all_off" => [[
            0x56, 0xff, 0xff, 0x00, 0x15, 0x11, 0x01, 0x00, 0x01, 0x00, 0x00,
            0x09, 0x01, 0x00, 0x00, 0x01, 0x00, 0x3f, 0x00, 0x00, 0x00,
        ]],

        # read instructions
        "read_input_bits" => [
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x01],
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x02],
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x03],
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x04],
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x05],
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x06],
        ],
        "read_output_bits" => [
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x07],
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x08],
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x09],
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x0a],
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x0b],
            [0x56, 0xff, 0xff, 0x00, 0x08, 0x0a, 0x00, 0x0c],
        ],
    ] |> Dict


function read_input_bit(i)
    command = COMMANDS["read_input_bits"][i]

end

function send_commands(commands, portname=PORTNAME, baudrate=BAUDRATE)

    rx = []

    LibSerialPort.open(portname, baudrate) do sp
        if sp_input_waiting(sp) > 0
            sp_flush(sp)
        end

        for command in commands
            @show command
            sp.write(command)
            sleep(0.1)

            rx_raw
            while sp_input_waiting(sp) > 0
                push!(rx_raw, read(sp))
            end

            sleep(0.1)

            @show rx_raw

            push!(rx, rx_raw)

        end
    end

    return rx
end

         




function comm(tty = "/dev/ttyACM0")

end

end # module
